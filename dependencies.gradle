def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

/**
 * Use the number of seconds/10 since Dec 12 2017 as the versionCode.
 * This lets us upload a new build at most every 10 seconds for the
 * next 680 years.
 */
def verCode = (int) (((new Date().getTime() / 1000) - 1513056598) / 10)

def release = [
        proguard: true
]

def debug = [
        proguard: false
]

def buildConfig = [
        versionCode: verCode,
        minSdk     : 23,
        compileSdk : 27,
        targetSdk  : 23,
        versionName: "1.0.0-${getGitHash}",
        buildTools : '27.0.3',
        support    : '27.1.1',
        "release"  : release,
        "debug"    : debug,
]

def pluginVersions = [
        androidTools: '3.1.2',
]

def rxVersions = [
        java   : '2.1.12',
        kotlin : '2.2.0',
        android: '2.0.2'
]

def versions = [
        kotlin          : '1.2.30',
        okbuck          : '0.37.1',
        constraintLayout: '1.1.0',
        "plugin"        : pluginVersions,
        "rx"            : rxVersions,
        arrow           : '0.7.1',
        litho           : '0.13.1',
        arch            : '1.1.1',
        androidKtx      : '0.3',
        couchbase       : '2.0.0',
        timber          : '4.7.0',
        autoDispose     : '0.7.0',

        //Test
        junit           : '4.12',
]

def build = [
        androidPlugin: "com.android.tools.build:gradle:${versions.plugin.androidTools}",
        kotlinPlugin : "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}",
        okbuck       : "com.uber:okbuck:${versions.okbuck}",
]

def support = [
        annotations     : "com.android.support:support-annotations:${buildConfig.support}",
        appCompatv7     : "com.android.support:appcompat-v7:${buildConfig.support}",
        v4              : "com.android.support:support-v4:${buildConfig.support}",
        v13             : "com.android.support:support-v13:${buildConfig.support}",
        design          : "com.android.support:design:${buildConfig.support}",
        recyclerView    : "com.android.support:recyclerview-v7:${buildConfig.support}",
        constraintLayout: "com.android.support.constraint:constraint-layout:${versions.constraintLayout}",
]

def arch = [
        extensions: "android.arch.lifecycle:extensions:${versions.arch}",
        compiler  : "android.arch.lifecycle:compiler:${versions.arch}",
        paging    : "android.arch.paging:runtime:1.0.0-rc1",
]

def kotlin = [
        stdlib    : "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",
        stdlibJre7: "org.jetbrains.kotlin:kotlin-stdlib-jre7:${versions.kotlin}",
        reflect   : "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}",
        coroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5",
]

def arrow = [
        core               : "io.arrow-kt:arrow-core:${versions.arrow}",
        syntax             : "io.arrow-kt:arrow-syntax:${versions.arrow}",
        typeclasses        : "io.arrow-kt:arrow-typeclasses:${versions.arrow}",
        data               : "io.arrow-kt:arrow-data:${versions.arrow}",
        instancesCore      : "io.arrow-kt:arrow-instances-core:${versions.arrow}",
        instancesData      : "io.arrow-kt:arrow-instances-data:${versions.arrow}",
        annotationProcessor: "io.arrow-kt:arrow-annotations-processor:${versions.arrow}",
]

def litho = [
        core       : "com.facebook.litho:litho-sections-core:${versions.litho}",
        widget     : "com.facebook.litho:litho-sections-widget:${versions.litho}",
        annotations: "com.facebook.litho:litho-sections-annotations:${versions.litho}",
        processor  : "com.facebook.litho:litho-sections-processor:${versions.litho}"
]

def rx = [
        java   : "io.reactivex.rxjava2:rxjava:${versions.rx.java}",
        kotlin : "io.reactivex.rxjava2:rxkotlin:${versions.rx.kotlin}",
        android: "io.reactivex.rxjava2:rxandroid:${versions.rx.android}",
]

def retrofit = [
        retrofit         : "com.squareup.retrofit2:retrofit:2.4.0",
        moshiAdapter     : "com.squareup.moshi:moshi-kotlin:1.5.0",
        coroutinesAdapter: "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:1.0.0"
]

def autoDispose = [
        kotlin        : "com.uber.autodispose:autodispose-kotlin:${versions.autoDispose}",
        android       : "com.uber.autodispose:autodispose-android-kotlin:${versions.autoDispose}",
        archComponents: "com.uber.autodispose:autodispose-android-archcomponents-kotlin:${versions.autoDispose}",
]

def external = [
        "kotlin"     : kotlin,
        "arrow"      : arrow,
        "litho"      : litho,
        "retrofit"   : retrofit,
        "rx"         : rx,
        "autoDispose": autoDispose,
        timber       : "com.jakewharton.timber:timber:${versions.timber}",
        couchbase    : "com.couchbase.lite:couchbase-lite-android:${versions.couchbase}",
        androidKtx   : "androidx.core:core-ktx:${versions.androidKtx}",
]

def test = [
        junit             : "junit:junit:${versions.junit}",
        androidJUnitRunner: "android.support.test.runner.AndroidJUnitRunner",
]

ext.config = [
        "build": buildConfig,
]

ext.deps = [
        "build"   : build,
        "arch"    : arch,
        "support" : support,
        "external": external,
        "test"    : test,
]
